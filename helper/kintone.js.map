{"version":3,"sources":["auto-lookup.js","kintone.js"],"names":["console","log","window","kintoneDevInserted"],"mappings":";AAwJA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAxJe,IAAA,EAAA,KACbA,QAAQC,IAAI,gBAuJd,QAAA,QAAA;;AClJC,aAND,IAAA,EAAA,EAAA,QAAA,kBAMC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAJIC,OAAOC,qBACVD,OAAOC,oBAAqB,EAC5BF,IAAI,kBAAJ,iBACA,EAAA,EAAA","file":"kintone.js","sourceRoot":"../../helper/src/kintone","sourcesContent":["export default () => {\n  console.log('auto-lookup')\n}\n\n// const _apiUri = 'https://372b8zyuzxt8.cybozu.com'\n// const authorizationKey =\n//   'cnlvanUuYnVpbGRlckBnbWFpbC5jb206bnhrMnBmYV95cGQtRUtYLXBucg==' // btoa(email:password)\n\n// const _relativeRecordsConfig = [\n//   {\n//     appId: 18,\n//     copyFields: ['HER_SYS_ID'],\n//     targetAppIds: [20, 25],\n//   },\n// ]\n\n// const _lookupConfig = [\n//   [18, 20, '氏名,フリガナ,初診年月日'],\n//   [18, 25, '氏名,フリガナ'],\n// ]\n\n// // デバッグログを出力する\n// function log(...args) {\n//   console.log('core.js:', ...args)\n// }\n\n// // 子のAppに指定したフィールドが存在しない場合、レコードを新規に作成する\n// async function createRelativeRecords(appId, eventRecord) {\n//   for (const recordConfig of _relativeRecordsConfig) {\n//     if (recordConfig.appId !== appId) continue\n\n//     const recordData = {}\n//     recordConfig.copyFields.forEach((field) => {\n//       recordData[field] = { value: eventRecord[field].value }\n//     })\n\n//     for (const targetAppId of recordConfig.targetAppIds) {\n//       const data = {\n//         app: targetAppId,\n//         record: recordData,\n//       }\n\n//       await fetch(`${_apiUri}/k/v1/record.json`, {\n//         method: 'POST',\n//         headers: {\n//           'X-Cybozu-Authorization': authorizationKey,\n//           'Content-Type': 'application/json;charset=utf-8',\n//         },\n//         body: JSON.stringify(data),\n//       }).then((res) => {\n//         if (res.status === 200) {\n//           log('upsertRecords:', 'Added this record.', data)\n//         } else {\n//           log('upsertRecords:', 'This record is already exist.', data)\n//         }\n//       })\n//     }\n//   }\n// }\n\n// // 親のフィールドを元にルックアップ設定先のフィールドを更新する\n// async function updateLookupRecords(appId, eventRecord) {\n//   for (const lookupConfig of _lookupConfig) {\n//     if (lookupConfig[0] !== appId) continue\n\n//     const targetAppId = lookupConfig[1]\n//     const targetHerSysId = eventRecord['HER_SYS_ID'].value\n\n//     const recordData = {}\n//     lookupConfig[2].split(',').forEach((field) => {\n//       recordData[field] = { value: eventRecord[field].value }\n//     })\n\n//     const data = {\n//       app: targetAppId,\n//       updateKey: {\n//         field: 'HER_SYS_ID',\n//         value: targetHerSysId,\n//       },\n//       record: recordData,\n//     }\n\n//     await fetch(`${_apiUri}/k/v1/record.json`, {\n//       method: 'PUT',\n//       headers: {\n//         'X-Cybozu-Authorization': authorizationKey,\n//         'Content-Type': 'application/json;charset=utf-8',\n//       },\n//       body: JSON.stringify(data),\n//     }).then((res) => {\n//       if (res.status === 200) {\n//         log('updateLookupRecordss:', 'Updated this record.', data)\n//       } else {\n//         log('updateLookupRecordss:', 'Failed to update this record.', data)\n//       }\n//     })\n//   }\n// }\n\n// // レコードを作成編集した時のイベント\n// kintone.events.on(\n//   [\n//     'app.record.create.submit',\n//     'app.record.edit.submit',\n//     'app.record.index.edit.submit',\n//   ],\n//   async (event) => {\n//     log(event)\n//     const { record, appId } = event\n\n//     await createRelativeRecords(appId, record)\n//     await updateLookupRecords(appId, record)\n\n//     return event\n//   },\n// )\n\n// // レコード編集画面を開いた時のイベント\n// kintone.events.on(\n//   [\n//     'app.record.create.show',\n//     'app.record.edit.show',\n//     'app.record.index.edit.show',\n//   ],\n//   (event) => {\n//     log(event)\n//     const { appId } = event\n\n//     // HER_SYS_IDの変更を禁止する(編集時のみ)\n//     // event.record['HER_SYS_ID'].disabled = true\n\n//     // ルックアップ先の編集を禁止する\n//     const lookup = _lookupConfig.find((lookup) => lookup[1] === appId)\n//     if (lookup) {\n//       lookup[2].split(',').forEach((field) => {\n//         event.record[field].disabled = true\n//       })\n//     }\n\n//     // 変数フィールドを非表示にする\n//     document.querySelectorAll('.control-label-text-gaia').forEach((element) => {\n//       element.parentElement.parentElement.setAttribute('id', element.innerText)\n//     })\n//     document.querySelectorAll('[id^=\"_\"]').forEach((element) => {\n//       console.log(element)\n//       element.style.opacity = '0.3'\n//     })\n\n//     return event\n//   },\n// )\n\n// log('installed', 100)\n","import autoLookup from \"./auto-lookup\";\n\nif (!window.kintoneDevInserted) {\n  window.kintoneDevInserted = true\n  log('Kintone Version', process.env.now)\n  autoLookup()\n}"]}